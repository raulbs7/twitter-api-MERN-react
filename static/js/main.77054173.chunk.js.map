{"version":3,"sources":["reportWebVitals.js","config.js","components/HeaderDashboard.jsx","utils/api.js","utils/utils.js","components/posts/AddPost.jsx","utils/apicalls.js","components/posts/EditPost.jsx","components/posts/MyPostList.jsx","components/posts/PostList.jsx","images/bird.png","components/App.jsx","index.js","components/Home.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","baseURL_API","process","clientID","HeaderDashboard","props","Navbar","color","light","expand","NavbarBrand","className","sessionStorage","getItem","Collapse","navbar","Nav","NavItem","NavLink","href","onClick","onShow","clientId","buttonText","theme","onLogoutSuccess","onLogout","axios","create","baseURL","monthNames","dayNames","getDateInStrFormat","date","getDay","getDate","getMonth","getFullYear","getHours","slice","getMinutes","getSeconds","AddPost","useState","message","setMessage","checkPOSTNewPost","res","updateMyPosts","Card","body","CardTitle","tag","Form","FormGroup","Label","for","Input","style","height","type","name","value","id","placeholder","onChange","e","target","Button","preventDefault","email","user","image","API","post","result","data","postNewPost","EditPost","checkPUTPost","useEffect","idpost","put","putExistingPost","_id","MyPostList","posts","setPosts","Alert","edit","setEdit","activeTab","setActiveTab","showDeleteModal","setShowDeleteModal","getPosts","get","toggleTab","tab","handleUpdateMyPosts","deletePostSel","delete","checkDELETEPost","Row","Col","xs","Badge","pill","length","Table","map","index","CardBody","src","alt","align","outline","handleShowEdit","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","askForDelete","Math","floor","random","Date","publicationdate","tabs","classnames","active","TabContent","TabPane","tabId","sm","PostList","imgStyle","maxWidth","ReactDOM","render","exact","path","component","loginMessage","setLoginMessage","Container","Media","object","MyPlaceBird","onSuccess","googleUser","profile","getBasicProfile","setItem","getName","getEmail","getImageUrl","history","push","onFailure","response","show","setShow","clear","option","document","getElementById"],"mappings":"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","file":"static/js/main.77054173.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\r\n    baseURL_API: process.env.REACT_APP_APIURI,\r\n    clientID: process.env.REACT_APP_CLIENTID\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport { Collapse, Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport { FaCogs } from 'react-icons/fa';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport config from '../config.js';\r\n\r\nexport default function HeaderDashboard(props){\r\n\r\n  return (\r\n    <Navbar color=\"primary\" light expand=\"md\">\r\n      <NavbarBrand><FaCogs color=\"white\"/><span className=\"text-white\"><strong> Dashboard:</strong> {sessionStorage.getItem('name')}</span></NavbarBrand>\r\n      <Collapse navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink href=\"#\" onClick={() => props.onShow(1)}><span className=\"text-white\">Todos los Posts</span></NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"#\" onClick={() => props.onShow(2)}><span className=\"text-white\">Mis Posts</span></NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <GoogleLogout\r\n              clientId={config.clientID}\r\n              buttonText=\"Logout\"\r\n              theme='dark'\r\n              onLogoutSuccess={props.onLogout}\r\n            />\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n  </Navbar>\r\n  );\r\n}","import axios from 'axios';\r\nimport config from '../config.js';\r\n\r\nexport default axios.create({\r\n    baseURL: config.baseURL_API\r\n});","export {\r\n    getDateInStrFormat\r\n  };\r\n  /* Formatting date */\r\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\",\"Fri\", \"Sat\"];\r\n  function getDateInStrFormat(date){\r\n    var strformatted = dayNames[date.getDay()]+\", \"+\r\n                       date.getDate()+\" \"+\r\n                       monthNames[date.getMonth()]+\" \"+\r\n                       date.getFullYear()+\", \"+\r\n                       (\"0\" + date.getHours()).slice(-2)+\":\"+\r\n                       (\"0\" + date.getMinutes()).slice(-2)+\":\"+\r\n                       (\"0\" + date.getSeconds()).slice(-2);\r\n    return strformatted;\r\n  }","import React, { useState } from 'react';\r\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport { postNewPost } from \"../../utils/apicalls.js\";\r\n\r\nexport default function AddPost(props){\r\n  const [message, setMessage] = useState('');\r\n  const addPost = (e) => {\r\n    e.preventDefault();\r\n    //Save post in database with post api call\r\n    postNewPost(sessionStorage.getItem('email'),sessionStorage.getItem('name'), sessionStorage.getItem('image'), message)\r\n      .then((res) => checkPOSTNewPost(res));\r\n  }\r\n  //Check the response from the server\r\n  const checkPOSTNewPost = (res) => {\r\n    if (res === \"OK\"){\r\n      //TODO Show Modal when a new post is added\r\n      props.updateMyPosts();\r\n    }else{\r\n      //TODO Show Modal when an error adding a new post occurs\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Card body>\r\n        <CardTitle tag=\"h5\">Añadir un nuevo post</CardTitle>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"aMensaje\">Mensaje</Label>\r\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" value={message} id=\"aMensaje\" placeholder=\"Introduce un mensaje\" onChange={(e) => setMessage(e.target.value)}/>\r\n          </FormGroup>\r\n          <Button color=\"primary\" onClick={addPost}>Añadir</Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}","import API from './api';\r\n\r\nexport {\r\n    getAllPosts,\r\n    getMyPosts,\r\n    deletePost,\r\n    postNewPost,\r\n    putExistingPost\r\n}\r\n\r\nfunction getAllPosts() {\r\n    return API.get('/posts').then(res => res.data);\r\n}\r\n\r\nfunction getMyPosts(email) {\r\n    return API.get('/posts/all/'+email).then(res => res.data);\r\n}\r\n\r\nfunction deletePost(idpost) {\r\n    return API.delete('/posts/'+idpost).then(result => result.data);\r\n}\r\n\r\nfunction postNewPost(email, user, image, message) {\r\n    return API.post('/posts', {\r\n      email,\r\n      user,\r\n      image,\r\n      message}).then(result => result.data);\r\n}\r\n\r\nfunction putExistingPost(idpost, message) {\r\n    return API.put('/posts/'+idpost, {\r\n      message}).then(result => result.data);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\r\n\r\nimport { putExistingPost } from \"../../utils/apicalls.js\";\r\n\r\nexport default function EditPost(props){\r\n\r\n  const [message, setMessage] = useState(props.post.message);\r\n\r\n  const editPost = (e) => {\r\n    e.preventDefault();\r\n    //Update post in database with put api call\r\n    putExistingPost(props.post._id, message)\r\n      .then((res) => checkPUTPost(res));\r\n  }\r\n\r\n  //Check the response from the server\r\n  const checkPUTPost = (res) => {\r\n    if (res === \"OK\"){\r\n      //TODO Show Modal when a the post is updated\r\n      props.updateMyPosts();\r\n    }else{\r\n      //TODO Show Modal when an error updating the post occurs\r\n    }\r\n  }\r\n\r\n  useEffect(() =>{\r\n    setMessage(props.post.message);\r\n  },[props.post]);\r\n\r\n  return (\r\n    <div>\r\n      <Card body>\r\n        <CardTitle tag=\"h5\">Editar post</CardTitle>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"aDescripcion\">Mensaje</Label>\r\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" id=\"aDescripcion\" placeholder=\"Introduce un mensaje\" value={message} onChange={(e) => setMessage(e.target.value)}/>\r\n          </FormGroup>\r\n            <Button color=\"primary\" onClick={editPost}>Actualizar</Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classnames from 'classnames';\r\nimport '../../styles.css';\r\nimport { Row, Col, Card, CardTitle, Badge, CardBody,\r\nTable, Alert, Button, Nav, NavItem, NavLink, TabContent,\r\nTabPane, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\r\nimport { BsChat, BsUpload } from \"react-icons/bs\";\r\nimport { getMyPosts, deletePost } from \"../../utils/apicalls.js\";\r\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\r\nimport AddPost from './AddPost';\r\nimport EditPost from './EditPost';\r\n\r\nexport default function MyPostList(props){\r\n  const [posts, setPosts] = useState([]);\r\n  const [edit, setEdit] = useState(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [showDeleteModal, setShowDeleteModal] = useState(null);\r\n  const getPosts = () => {\r\n      getMyPosts(sessionStorage.getItem('email')).then((posts) => {\r\n          setPosts(posts);\r\n      });\r\n  }\r\n  const toggleTab = (tab) => {\r\n    if (activeTab !== tab)\r\n      setActiveTab(tab);\r\n  }\r\n  const handleUpdateMyPosts = () => {\r\n    getPosts();\r\n  }\r\n  const askForDelete = (post) => {\r\n    setShowDeleteModal(\r\n      <Modal isOpen=\"true\" className={props.className}>\r\n        <ModalHeader>Eliminar post</ModalHeader>\r\n        <ModalBody>\r\n          Se va a eliminar el post:<br/><small><strong>{post.message}</strong></small>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => deletePostSel(post)}>Eliminar</Button>{' '}\r\n          <Button color=\"secondary\" onClick={() => setShowDeleteModal(null)}>Cancelar</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n  //Deleting selected post\r\n  const deletePostSel = (post) => {\r\n    deletePost(post._id)\r\n      .then((res) => checkDELETEPost(res));\r\n  }\r\n  //Check the response from server\r\n  const checkDELETEPost = (res) => {\r\n    //if ok, remove modal and reset edit component\r\n    if (res === \"OK\"){\r\n      setShowDeleteModal(null);\r\n      setEdit(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\r\n      handleUpdateMyPosts();\r\n    }else{\r\n      //TODO Show a modal when error from server\r\n    }\r\n  }\r\n  const handleShowEdit = (post) => {\r\n    setEdit(<EditPost post= {post} updateMyPosts = {handleUpdateMyPosts} />);\r\n  }\r\n  useEffect(() =>{\r\n    getPosts();\r\n  },[]);\r\n  return(\r\n    <div>\r\n      {showDeleteModal}\r\n      <Row>\r\n        <Col xs=\"7\">\r\n          <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Mis Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\r\n          <Table>\r\n            <tbody>\r\n              { posts.map((post, index) => {\r\n                return(<div>\r\n                  <div>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row><Col><strong><img src={post.image} alt=\"Img\"/> {post.user}</strong></Col>\r\n                               <Col align=\"right\">\r\n                                  <Button outline onClick={() => handleShowEdit(post)}><FaEdit /></Button>\r\n                                  {' '}\r\n                                  <Button outline onClick={() => askForDelete(post)}><FaTrashAlt /></Button>\r\n                                </Col>\r\n                                </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              {post.message}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col align=\"left\" xs= \"8\">\r\n                              <Row>\r\n                                <Col xs=\"2\"><BsChat /></Col>\r\n                                <Col xs=\"2\"><AiOutlineRetweet /><small>{Math.floor((Math.random() * 10) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><AiOutlineHeart /><small>{Math.floor((Math.random() * 100) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><BsUpload/></Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col align=\"right\">\r\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n              </div>\r\n                </div>)\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col xs=\"5\">\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '1' })} onClick={() => toggleTab('1')}>\r\n                Añadir\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '2' })} onClick={() => toggleTab('2')}>\r\n                Editar\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  <AddPost updateMyPosts = {handleUpdateMyPosts}/>\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {edit}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, CardTitle, Badge, CardBody, Table, Alert } from 'reactstrap';\r\nimport '../../styles.css';\r\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\r\nimport { BsChat, BsUpload } from \"react-icons/bs\";\r\nimport { getAllPosts } from \"../../utils/apicalls.js\";\r\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\r\n\r\nexport default function PostList(){\r\n  const [posts, setPosts] = useState([]);\r\n  const getPosts = () => {\r\n    getAllPosts().then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n  }\r\n  useEffect(() =>{\r\n    getPosts();\r\n  },[]);\r\n  return (\r\n    <div>\r\n      <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\r\n      <Table>\r\n        <tbody>\r\n          { posts.map((post, index) => {\r\n            return(\r\n              <div>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row><Col><strong><img src={post.image} alt=\"Img\"/> {post.user}</strong></Col></Row>\r\n                          <Row>\r\n                            <Col>\r\n                              {post.message}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col align=\"left\" xs= \"5\">\r\n                              <Row>\r\n                                <Col xs=\"2\"><BsChat /></Col>\r\n                                <Col xs=\"2\"><AiOutlineRetweet /><small>{Math.floor((Math.random() * 10) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><AiOutlineHeart /><small>{Math.floor((Math.random() * 100) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><BsUpload/></Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col align=\"right\">\r\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n              </div>)\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/bird.7a65b904.png\";","import React, { useState } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavItem, Media, Row, Col, Container, Alert } from 'reactstrap';\n\nimport PostList from './posts/PostList';\n\nimport { GoogleLogin } from 'react-google-login';\nimport config from '../config.js';\n\nimport MyPlaceBird from '../images/bird.png';\nvar imgStyle = {\n  maxWidth: \"85px\",\n};\n\nexport default function App(props){\n\n  const [loginMessage, setLoginMessage] = useState(null);\n\n  const responseGoogleSuccess = (googleUser) => {\n    var profile = googleUser.getBasicProfile();\n\n    sessionStorage.setItem('name', profile.getName());\n    sessionStorage.setItem('email', profile.getEmail());\n    sessionStorage.setItem('image', profile.getImageUrl());\n    \n    props.history.push(\"/home\");\n  }\n\n  const responseGoogleFailure = (response) => {\n    setLoginMessage(<Alert color=\"danger\">Inicio de sesión incorrecto. Inténtelo de nuevo</Alert>);\n  }\n\n  return(\n    <Container>\n      <Row>\n        <Col>\n          <Navbar color=\"primary\" light expand=\"md\">\n          <Media style={imgStyle} object src={MyPlaceBird} alt=\"Bird\"/><NavbarBrand><h4 className=\"text-white\">My Twitter Clone</h4></NavbarBrand>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                {loginMessage}\n                <GoogleLogin\n                  clientId={config.clientID}\n                  buttonText=\"Login with Google\"\n                  theme='dark'\n                  onSuccess={responseGoogleSuccess}\n                  onFailure={responseGoogleFailure}\n                />\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs= \"12\">\n          <PostList/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport reportWebVitals from './reportWebVitals';\n\nimport Home from './components/Home';\nimport App from './components/App';\n\nReactDOM.render(<HashRouter>\n  <div>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/home\" component={Home} />\n  </div>\n</HashRouter >, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from 'react';\r\nimport {Container, Row, Col } from 'reactstrap';\r\nimport HeaderDashboard from './HeaderDashboard';\r\nimport MyPostList from './posts/MyPostList';\r\nimport PostList from './posts/PostList';\r\n\r\nexport default function Home(props){\r\n  const [show, setShow] = useState(<PostList />);\r\n \r\n  const handleLogout = () => {\r\n    sessionStorage.clear();\r\n    props.history.push(\"/\");\r\n  }\r\n  \r\n  const handleOnShow = (option) => {\r\n    if (option === 1){\r\n      setShow(<PostList />);\r\n    }else if (option === 2){\r\n      setShow(<MyPostList />);\r\n    }\r\n  }\r\n  if (sessionStorage.getItem(\"name\") === null){\r\n    props.history.push(\"/\");\r\n  }\r\n  else{\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col><HeaderDashboard onLogout={handleLogout} onShow= {handleOnShow} /></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\">\r\n              {show}\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}